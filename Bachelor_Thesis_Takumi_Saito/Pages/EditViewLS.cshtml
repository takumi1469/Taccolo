@page "{lsid?}"
@using Bachelor_Thesis_Takumi_Saito.Pages.Data
@using System.Security.Claims
@model Bachelor_Thesis_Takumi_Saito.Pages.EditViewLsModel
@{
    ViewData["Title"] = "EditViewLs";
}
@{
    Layout = "_taccoloLayout";
}
@section Styles {
    <link rel="stylesheet" href="/css/page-specific/EditViewLs.css" />
}
<p id="p-id" class="p-id no-display">@Model.LsId</p>
@if (User.Identity?.IsAuthenticated == true)
{
    <p id="p-username" class="p-username no-display">@User.Identity.Name</p>
}


<div class="div-main">
    <div class="div-title">
        <h1 class="h1-title">Edit and View Learning Set</h1>
        <div class="div-buttons" id="div-buttons">
            <button class="button-edit" id="button-edit" onclick="switchToEdit()">EDIT</button>
        </div>
    </div>
    <div class="div-basic-info">
        <span class="span-title"><strong>Title: @Model.LsToDisplay?.Title </strong></span>
        <br>
        <span class="span-basic-info"><strong>From: </strong>@Model.LsToDisplay?.SourceLanguage</span>
        <span class="span-basic-info"><strong>To: </strong>@Model.LsToDisplay?.TargetLanguage</span>
        <span class="span-basic-info"><strong>User: </strong>@Model?.Username</span>
        <span class="span-basic-info"><strong>Created on:  </strong>@Model.LsToDisplay?.Date</span>
    </div>
    @if (Model.LsId == null)
    {
        <h4>Learning Set is not chosen.</h4>
    }
    else
    {
        <div class="div-outputs">
            <div class="div-original div-output-column" id="div-original">
                <h2>Original Text</h2>
                @if (Model.LsToDisplay?.Input != null)
                {
                    <p class="p-original" id="p-original">@Html.Raw(Model.LsToDisplay?.Input.Replace("\n", "<br>"))</p>
                    //replace \n with <br> because HTML can't read \n as line breaks
                }
            </div>
            <div class="div-translated  div-output-column">
                <h2>Translated Text</h2>
                @if (Model.LsToDisplay?.Translation != null)
                {
                    <p class="p-translated" id="p-translated">@Html.Raw(Model.LsToDisplay?.Translation.Replace("\n", "<br>"))</p>
                    //replace \n with <br> because HTML can't read \n as line breaks
                }
            </div>
            <div class="div-glossary div-output-column" id="div-glossary">
                <h2>List of Words</h2>
                @foreach (WordMeaningPair pair in Model.LsToDisplay?.WordMeaningPairs)
                {
                    <div class="div-wmp">
                        <img src="~/icons/star.svg" class="icon icon-star" title="add word below">
                        <p class="p-word"><strong>@pair.Word</strong></p><span> :</span>
                        <p class="p-translated-text">@pair.TranslatedText</p>
                        <img src="~/icons/plus3.svg" class="icon icon-plus icon-for-edit icon-plus-word" title="add word below">
                        <img src="~/icons/minus3.svg" class="icon icon-minus icon-for-edit icon-minus-word" title="delete this word">
                        <br />
                        <p class="p-order no-display">@pair.Order</p>
                        <p class="p-wmp-id no-display">@pair.Id</p>
                        @if (pair.Alternatives is not null)
                        {
                            <span class="span-or">or: </span>
                            @if (pair.Alternatives.Count == 0)
                            {
                                <div class="div-each-alt">
                                    <p class="p-alternative-meaning"></p>
                                    <img src="~/icons/plus3.svg" class="icon icon-plus icon-for-edit icon-plus-meaning" title="add meaning below">
                                    <img src="~/icons/minus3.svg" class="icon icon-minus icon-for-edit icon-minus-meaning" title="delete this meaning">
                                </div>
                            }
                            else
                            {
                                foreach (string alternative in pair.Alternatives)
                                {
                                    if (alternative != String.Empty)
                                    {
                                        <div class="div-each-alt">
                                            <p class="p-alternative-meaning">@alternative</p>
                                            <img src="~/icons/plus3.svg" class="icon icon-plus icon-for-edit icon-plus-meaning" title="add meaning below">
                                            <img src="~/icons/minus3.svg" class="icon icon-minus icon-for-edit icon-minus-meaning" title="delete this meaning">
                                        </div>
                                    }
                                }
                            }
                        }
                    </div>
                }
            </div>
        </div>
    }

    <div class="div-comments-etc">
        <div class="div-description">
            <h2 class="h2-description-title">Description</h2>
            @if (Model.LsToDisplay?.Description != null)
            {
                <span class="span-description">@Model.LsToDisplay.Description</span>
                <button class="button-edit-description button-comment-help" id="button-edit-description" onclick="editDescription(event)">Edit description</button>
            }
            else
            {
                @if (Model.IsOwner)
                {
                    <textarea class="textarea-description" id="textarea-description" placeholder="Add description to this Learning Set"></textarea>
                    <button class="button-add-description button-comment-help" id="button-add-description" onclick="addDescription(event)">Add description</button>
                }
                else
                {
                    <span class="span-no-description">There is no description for this Learning Set.</span>
                }
            }
        </div>
        <div class="div-comments-helps">
            <div class="div-comments">
                <h2 class="h2-comments-title">Comments on Learning Set</h2>
                <textarea class="textarea-comment textarea-comment-help" id="textarea-comment" placeholder="Add a comment"></textarea>
                @if (User.Identity?.IsAuthenticated == true)
                {
                    <button class="button-comment button-comment-help" onclick="addComment(event)">Comment</button>
                }
                else
                {
                    <a class="a-redirect-login" href="/Identity/Account/Login"><button class="button-comment button-comment-help">Comment</button></a>
                }
                
                @if(Model.LsToDisplay?.Comments != null){
                    @foreach (EditViewLsModel.CommentWithUsername comment in Model.CommentWithUsernames)
                    {
                        <div class="div-each-comment">
                            <p class="p-comment-username">@comment.Username<span class="span-date-time">(@comment.Date)</span></p>
                            <p class="p-comment">@comment.Body</p>
                        </div>
                    }
                }
                else
                {
                    <p id="p-no-comment">There's no comments yet.</p>
                }
            </div>
            <div class="div-helps">
                <h2 class="h2-help-requrst-title">Help Requests and Replies</h2>
                @if (Model.IsOwner)
                {
                    <textarea class="textarea-help-request textarea-comment-help" id="textarea-help-request" placeholder="Add a Help Request"></textarea>
                    <button class="button-help-request button-comment-help" onclick="addHelpRequest(event)">Add Help Request</button>
                }

                @if (Model.CurrentHelpRequests != null)
                {
                    @foreach (HelpRequest helpRequest in Model.CurrentHelpRequests)
                    {
                        <div class="div-each-help-request">
                            <h4 class="h4-help-request">@helpRequest.Body</h4>
                            <p class="p-help-request-id no-display">@helpRequest.Id</p>
                            <textarea class="textarea-help-reply textarea-comment-help" id="textarea-help-reply" placeholder="Reply to this Help Request"></textarea>
                            @if (User.Identity?.IsAuthenticated == true)
                            {
                                <button class="button-help-reply button-comment-help" onclick="addHelpReply(event)">Reply</button>
                            }
                            else
                            {
                                <a class="a-redirect-login" href="/Identity/Account/Login"><button class="button-help-reply button-comment-help">Reply</button></a>
                            }
                            @if (Model.HelpReplyWithUsernames != null)
                            {
                                @foreach (EditViewLsModel.HelpReplyWithUsername helpReply in Model.HelpReplyWithUsernames)
                                {
                                    @if (helpReply.RequestId == helpRequest.Id)
                                    {
                                        <div class="div-each-help-reply">
                                            <p class="p-help-reply">@helpReply.Body</p>
                                        </div>
                                    }
                                }
                            }
                        </div>
                    }
                }
                else
                {
                    <p id="p-no-help-request">There's no help requests yet.</p>
                }
            </div>
        </div>
    </div>


</div>
<script src="/js/edit-view-ls.js"></script>
<script>
    const isAuthenticated = @Json.Serialize(Model.IsAuthenticated);
</script>